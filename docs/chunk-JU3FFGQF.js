import{c as U,nc as T}from"./chunk-KVOOXQ5Z.js";import{D as l,H as y,T as v,W as F,Z as h,aa as D,ga as A,m as c,n as p,q as d,w as b}from"./chunk-IW7VSEPZ.js";import{a as g,b as $}from"./chunk-4X36HX5K.js";var k={production:!0,baseUrl:"https://apis.dividendosparatodos.com.br/services/",authUrl:"https://apis.dividendosparatodos.com.br/services/",useHash:!1};var O=(()=>{class m{constructor(){this.http=A(U),this.authService=A(T),this.apiUserPatrimonioPrefix="/api/patrimonios/usuario",this.apiCotacoesPrefix="/api/cotacoes/tickers",this.apiTransacoesPrefix="/api/transacoes/lote",this.patrimonioCompletoCache$=null,this.cotacaoUSDCache$=null,this.patrimonioHistoricoCache$=null,this.apiUrl="/api"}getUsuarioIdObservable(){return this.authService.user().pipe(y(1),d(o=>o?.id))}createTransactionLote(o,r){let e=`${this.apiTransacoesPrefix}/${o}`;return this.http.post(e,r).pipe(h(()=>this.clearPatrimonioCache()))}createTransaction(o,r){let e=`${this.apiUrl}/transacoes/${o}/criarTransacao`;return this.http.post(e,r).pipe(h(()=>this.clearPatrimonioCache()))}getCotacaoUSD(){if(!this.cotacaoUSDCache$){let o=`${this.apiCotacoesPrefix}?tickers=USD/BRL`;this.cotacaoUSDCache$=this.http.get(o).pipe(d(r=>{if(!r||r.length===0)return console.warn("DashboardService: Empty or null USD quote response. Returning 0."),0;let e=r[0].valorCotacao;return typeof e!="number"||isNaN(e)||e<=0?(console.warn("DashboardService: Invalid 'valorCotacao' in response. Returning 0.",r[0]),0):e}),l(r=>(console.error("DashboardService: HTTP error fetching USD quote. Returning 0.",r),c(0))),v(1))}return this.cotacaoUSDCache$}parseFormattedString(o){if(o==null||o.trim()==="")return 0;let r=o.trim();r=r.replace(/[^\d.,-]/g,""),r.includes(",")&&r.includes(".")?r.indexOf(",")>r.indexOf(".")?(r=r.replace(/\./g,""),r=r.replace(/,/g,".")):r=r.replace(/,/g,""):r.includes(",")&&(r=r.replace(/,/g,"."));let e=parseFloat(r);return isNaN(e)?(console.warn(`[DashboardService.parseFormattedString] Failed to parse: "${o}" -> "${r}". Returning 0.`),0):e}convertUsdToBrlNumeric(o,r){return r<=0?(console.warn(`[convertUsdToBrlNumeric] Invalid or zero USD quote (${r}). Returning assets without numeric conversion.`),o):o.map(e=>{let t=g({},e);if(t.moedaFormatada==="USD"){let i=this.parseFormattedString(t.valorAtualFormatado?.toString());t.valorAtualFormatado=isNaN(i)?0:i*r;let a=this.parseFormattedString(t.valorInvestidoFormatado?.toString());t.valorInvestidoFormatado=isNaN(a)?0:a*r;let n=this.parseFormattedString(t.precoMedioFormatado?.toString());t.precoMedioFormatado=isNaN(n)?0:n*r,t.lucroPrejuizoFormatado=t.valorAtualFormatado-t.valorInvestidoFormatado,t.moedaFormatada="BRL"}else t.valorAtualFormatado=this.parseFormattedString(t.valorAtualFormatado?.toString()),t.valorInvestidoFormatado=this.parseFormattedString(t.valorInvestidoFormatado?.toString()),t.precoMedioFormatado=this.parseFormattedString(t.precoMedioFormatado?.toString()),t.lucroPrejuizoFormatado=this.parseFormattedString(t.lucroPrejuizoFormatado?.toString());return t.quantidadeFormatada=this.parseFormattedString(t.quantidadeFormatada?.toString()),t})}getPatrimonioCompleto(){return this.patrimonioCompletoCache$||(this.patrimonioCompletoCache$=this.getUsuarioIdObservable().pipe(F(o=>{if(o==null)return console.error("User ID not available for fetching complete patrimony."),c([]);let r=`${this.apiUserPatrimonioPrefix}/${o}/patrimoniocompleto`;return b({patrimonio:this.http.get(r),cotacao:this.getCotacaoUSD()}).pipe(F(({patrimonio:e,cotacao:t})=>{if(!e||e.length===0)return c([]);let i=e.map(s=>({id:s.id,tickerFormatado:s.tickerFormatado,descricaoFormatada:s.descricaoFormatada,tipoAtivoFormatado:s.tipoAtivoFormatado,moedaFormatada:s.moedaFormatada,quantidadeFormatada:this.parseFormattedString(s.quantidadeFormatada),valorInvestidoFormatado:this.parseFormattedString(s.valorInvestidoFormatado),precoMedioFormatado:this.parseFormattedString(s.precoMedioFormatado),precoAtualFormatado:0,valorAtualFormatado:this.parseFormattedString(s.valorAtualFormatado),lucroPrejuizoFormatado:this.parseFormattedString(s.lucroPrejuizoFormatado),moeda:s.moeda,category:this.mapTipoAtivoToCategory(s.tipoAtivoFormatado)})),a=this.convertUsdToBrlNumeric(i,t),n=a.filter(s=>s.tipoAtivoFormatado!=="CAIXA").map(s=>s.tickerFormatado);if(n.length>0){let s=`${this.apiCotacoesPrefix}?tickers=${n.join(",")}`;return this.http.get(s).pipe(d(C=>{let S=new Map(C.map(u=>[u.ticker,{valorCotacao:u.valorCotacao,cambio:u.cambio}]));return a.map(u=>{if(u.tipoAtivoFormatado==="CAIXA")return u;let f=S.get(u.tickerFormatado),P=f?f.cambio==="USD"?f.valorCotacao*t:f.valorCotacao:0,I=u.quantidadeFormatada*P,w=I-u.valorInvestidoFormatado;return $(g({},u),{precoAtualFormatado:P,valorAtualFormatado:I,lucroPrejuizoFormatado:w})})}),l(C=>(console.error("DashboardService: Error fetching quotes for complete patrimony:",C),c(a.map(S=>$(g({},S),{precoAtualFormatado:0}))))))}return c(a)}),l(e=>(console.error("DashboardService: Error fetching complete patrimony for user:",e),c([]))))}),v(1))),this.patrimonioCompletoCache$}getPatrimonioHistorico(o){return this.patrimonioHistoricoCache$||(this.patrimonioHistoricoCache$=this.getUsuarioIdObservable().pipe(F(r=>{if(r==null)return console.error("User ID not available for fetching historical patrimony."),c([]);if(r!==o)return console.warn("User ID mismatch: auth ID does not match requested ID."),c([]);let e=`${this.apiUserPatrimonioPrefix}/${o}/historico`;return b({historico:this.http.get(e).pipe(d(t=>t.map(i=>({idHistorico:i.idHistorico,usuarioId:i.usuarioId,dataRegistro:this.validateDate(i.dataRegistro)??new Date().toISOString(),valorTotal:this.validateNumber(i.valorTotal)??0})).filter(i=>i.dataRegistro!==null&&i.valorTotal!==null)),l(t=>(console.error("DashboardService: Error fetching historical patrimony for user:",t),c([])))),completo:this.getPatrimonioCompleto()}).pipe(d(({historico:t,completo:i})=>!t||t.length===0?(console.warn("No historical data available for user."),[]):t),l(t=>(console.error("DashboardService: Error processing historical patrimony:",t),c([]))),v(1))}))),this.patrimonioHistoricoCache$}getDistribuicaoPatrimonio(){return this.getPatrimonioCompleto().pipe(d(o=>{if(!o||o.length===0)return[];let r={};o.forEach(a=>{let n=a.category||"outros";r[n]=(r[n]||0)+(a.valorAtualFormatado||0)});let e=Object.entries(r).map(([a,n])=>({tipoAtivo:a.charAt(0).toUpperCase()+a.slice(1),valorTotal:n,percentual:0})),t=e.reduce((a,n)=>a+n.valorTotal,0);return e.map(a=>(a.percentual=t>0?a.valorTotal/t*100:0,a.percentual=Math.round(a.percentual*100)/100,a))}),l(o=>(console.error("DashboardService: Error fetching patrimony distribution:",o),c([]))))}getPatrimonioAcoes(){return this.getPatrimonioCompleto().pipe(d(o=>o.filter(r=>r.category==="acoes")),l(o=>(console.error("DashboardService: Error filtering actions from complete patrimony:",o),c([]))))}getPatrimonioFundos(){return this.getPatrimonioCompleto().pipe(d(o=>o.filter(r=>r.category==="fundos")),l(o=>(console.error("DashboardService: Error filtering funds from complete patrimony:",o),c([]))))}getPatrimonioCaixa(){return this.getPatrimonioCompleto().pipe(d(o=>o.filter(r=>r.category==="caixa")),l(o=>(console.error("DashboardService: Error filtering cash from complete patrimony:",o),c([]))))}getPatrimonioAssets(){return this.getPatrimonioCompleto().pipe(d(o=>o.filter(r=>r.category==="assets")),l(o=>(console.error("DashboardService: Error filtering assets from complete patrimony:",o),c([]))))}deleteAtivo(o,r,e){if(!["fundos","acoes","caixa","assets"].includes(e))return console.error(`Invalid category for deletion: ${e}`),p(()=>new Error("Invalid category"));let t=encodeURIComponent(r),i=`${this.apiUserPatrimonioPrefix}/${o}/${t}`;return this.http.delete(i,{observe:"response"}).pipe(h(a=>{a.status===204?(console.log(`Ticker ${r} deleted successfully from category ${e} (204 No Content).`),this.clearPatrimonioCache()):console.warn(`Unexpected response deleting ticker ${r}: status ${a.status}`)}),d(()=>{}),l(a=>(console.error(`Error deleting ticker ${r} from category ${e}:`,a),p(()=>new Error(`Error deleting ticker: ${a.message||"Unknown error"}`)))))}updateAtivo(o,r,e){if(!["fundos","acoes","caixa","assets","outros"].includes(e))return console.error(`Invalid category for update: ${e}`),p(()=>new Error("Invalid category"));if(!r.tickerFormatado||r.tickerFormatado.trim()==="")return console.error(`Invalid ticker for asset in category ${e}:`,r),p(()=>new Error("Invalid ticker"));let t=encodeURIComponent(r.tickerFormatado),i=`${this.apiUserPatrimonioPrefix}/${o}/${t}`,a={idPatrimonio:typeof r.id=="string"?Number(r.id):r.id||0,descricao:r.descricaoFormatada||"",quantidade:r.quantidadeFormatada||0,precoMedio:r.precoMedioFormatado||0,valorInvestido:r.valorInvestidoFormatado||0,ticker:r.tickerFormatado,usuario:{id:Number(o)||0},tipoAtivo:this.mapCategoryToTipoAtivoNumber(e),moeda:r.moeda||"BRL"};if(a.tipoAtivo===3){let n=typeof r.valorAtualFormatado=="string"?parseFloat(r.valorAtualFormatado.replace(",","."))||0:typeof r.valorAtualFormatado=="number"?r.valorAtualFormatado:0;n>0&&(a.valorAtual=n)}return this.http.put(i,a,{headers:{"Content-Type":"application/json"}}).pipe(h(()=>{console.log(`Asset with ticker ${r.tickerFormatado} updated successfully in category ${e}.`),this.clearPatrimonioCache()}),l(n=>(console.error(`Error updating asset with ticker ${r.tickerFormatado} in category ${e}:`,n),p(()=>new Error(`Error updating asset: ${n.message||"Unknown error"}`)))))}addTransaction(o,r){let e=r.category;return["fundos","acoes","assets","caixa"].includes(e)?(this.clearPatrimonioCache(),c({success:!0})):(console.error(`Invalid category for transaction: ${e}`),p(()=>new Error("Invalid category")))}clearPatrimonioCache(){this.patrimonioCompletoCache$=null,this.cotacaoUSDCache$=null,this.patrimonioHistoricoCache$=null,console.log("DashboardService: Patrimony and historical cache cleared.")}mapTipoAtivoToCategory(o){switch(o.toUpperCase()){case"A\xC7\xC3O":return"acoes";case"FII":case"FUNDO":return"fundos";case"CAIXA":return"caixa";case"ASSET":return"assets";default:return"outros"}}mapCategoryToTipoAtivoNumber(o){switch(o.toLowerCase()){case"acoes":return 1;case"fundos":return 2;case"caixa":return 3;case"assets":return 4;default:return 0}}validateDate(o){if(!o){console.warn(`Invalid date: ${o}`);return}let r=new Date(o);if(isNaN(r.getTime())){console.warn(`Invalid date format: ${o}`);return}return o}validateNumber(o){let r=parseFloat(o);if(isNaN(r)){console.warn(`Invalid number format: ${o}`);return}return r}static{this.\u0275fac=function(r){return new(r||m)}}static{this.\u0275prov=D({token:m,factory:m.\u0275fac,providedIn:"root"})}}return m})();export{k as a,O as b};
